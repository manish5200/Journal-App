package net.manifest.journalapp.mapper;

import net.manifest.journalapp.dto.journal.JournalEntryDTO;
import net.manifest.journalapp.dto.journal.JournalResponseDTO;
import net.manifest.journalapp.entity.JournalEntry;


public class JournalMapper {

      public static JournalResponseDTO toResponseDTO(JournalEntry entry,String createdBy){
          return new JournalResponseDTO(
                  entry.getId() != null ? entry.getId().toHexString() : null,
                  entry.getUserId() != null ? entry.getUserId().toHexString() : null,
                  entry.getTitle(),
                  entry.getContent(),
                  createdBy,
                  entry.getSentiment(),
                  entry.getMood(),
                  entry.getTags(),
                  entry.getRatingStats(),
                  entry.getLocation(),
                  entry.getWeather()
          );
      }

    public static JournalEntry toEntity(JournalEntryDTO dto) {
        if (dto == null) {
            throw new IllegalArgumentException("Enter valid arguments.");
        }
        JournalEntry entity = new JournalEntry();
        entity.setTitle(dto.getTitle());
        entity.setContent(dto.getContent());
        entity.setMood(dto.getMood());
        entity.setLocation(dto.getLocation());
        entity.setWeather(dto.getWeather());
        entity.setPublic(dto.getIsPublic());
        entity.setTags(dto.getTags()); // <-- ADD THIS
        // The 'id' and 'date' will be generated by MongoDB upon insertion.
        return entity;
    }


}
